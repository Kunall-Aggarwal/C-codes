class TreeNode{
	int val;
	TreeNode left;
	TreeNode right;
	TreeNode(){}
	TreeNode(int v) { this.val = v; }
	TreeNode(int v){
		this.val = v;
		this.left = left;
		this.right = right;
	}
}

class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        Stack<TreeNode> st1 = new Stack<>();
        Stack<Integer> st2 = new Stack<>();
        
        List<Integer> l = new ArrayList<>();
        
        if(root == null)
            return l;
        
        st1.push(root);
        
        while(!st1.isEmpty()){
            TreeNode node = st1.pop();
            st2.push(node.val);
            if(node.left != null)
                st1.push(node.left);
            if(node.right != null)
                st1.push(node.right);
        }
        while(!st2.isEmpty()){
            l.add(st2.pop());
        }
        return l;
    }
}

