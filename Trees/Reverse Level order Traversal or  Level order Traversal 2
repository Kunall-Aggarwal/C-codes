class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> ll = new ArrayList<>();
        Queue<TreeNode> q = new LinkedList<>();
        Stack<List<Integer>> st = new Stack<>();
        q.add(root);
        
        while(!q.isEmpty()){
            int s = q.size();
            
            List<Integer> l = new ArrayList<>();
            for(int i = 0; i < s; i++){
                TreeNode cur = q.poll();
                
                if(cur.left != null)
                    q.add(cur.left);
                if(cur.right != null)
                    q.add(cur.right);
                l.add(cur.val);
            }
            st.add(l);
            
        } 
        while(!st.isEmpty()){
                ll.add(st.pop());
        }
        return ll;
    }
}
