class Solution{
	public int knapSack(int w, int n, int[] wt, int val){
		int [][] dp = new int[n+1][w+1];
		Arrays.fill(dp, -1);
		
		return solve(w, n, wt, val, dp);
	}
	public int solve(int w, int n, int[] wt, int val, int[][] dp){
		if(n == 0 || w == 0)
			return 0;
		if(dp[n][w] != -1)
			return dp[n][w];
			
		if(wt[n-1] <= w){
			return dp[n][w] = Math.max(val[n-1] + solve(w - wt[n-1], n-1, wt, val, dp), solve(w, n-1, wt, val, dp)); 
		}
		else
			return dp[n][w] = solve(w, n-1, wt, val, dp);
	}
}
