class Solution{
	public boolean equalSumPartition(int[] ar){
		int sum = 0;
		
		for(int i : ar)
			sum+=i;
		
		if(sum%2 != 0)
			return false;
		else
			return subsetSum(ar, sum/2);
	}
	public boolean subsetSum(int[] ar, int s){
		int n = ar.length;
		boolean dp[][] = new boolean[n+1][s+1];
		
		for(int i = 0; i < s+1; i++)
			dp[0][i] = false;
		for(int i = 0 ; i < n+1; i++)
			dp[i][0] = true;
			
		for(int i = 1; i<n+1; i++)
			for(int j = 1; j <s+1; j++){
				if(ar[i-1] <=j)
					dp[i][j] = dp[i-1][j-ar[i-1]] || dp[i-1][j];
				else
					dp[i][j] = dp[i-1][j];
			}
		
		return dp[n][s];
	}
}
